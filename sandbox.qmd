---
title: "Sandbox R code"
---

This Quarto website was rendered on GitHub **`{r} Sys.time()` at `{r} Sys.timezone()` time**.

The following code is focused on connecting R on GitHub to external data sources.

I test R code to:

1. Read a public shared `googlesheet` from Google Drive ✅ 
1. Download and read a public shared .`xlsx` file from Google Drive ✅ 
1. Write and upload a `.rds` file to Google Drive
1. Download and read a public shared `.rds` file from Google Drive ✅ 
1. Read data from an external API, Star Wars ✅ 
1. Read data from an external API, Weather forecast
1. Read and download files from private Google Drive, with authentication



\
Read a public shared `googlesheet` from Google Drive
```{r}
#| echo: true
#| warning: false
#| eval:  true

library(googlesheets4)
library(gt)

googlesheets4::gs4_deauth()     # Without auth

spreadsheet_url <- "https://docs.google.com/spreadsheets/d/1dnzTx2TIxk-QpoWNz08Jr_e4F2rZ4mDBgphzq9lwdYM/edit?usp=drive_link"
datatable <- googlesheets4::read_sheet(spreadsheet_url, range = "Ark1!A1:D5")

datatable |> gt()                        # print my datatable
```

\
Download and read a public shared `.xlsx` file from Google Drive\
```{r}
#| echo: true
#| warning: false
#| eval: true

library(googledrive)
library(readxl)
library(gt)

googledrive::drive_deauth()     # Without giving googledrive package access to my Google account

# Download and read a public shared `.xlsx` file from Google Drive
file_url <- "https://docs.google.com/spreadsheets/d/1AIAkWHGig6a0zG-iYH0Lj9PC2fLmfja5/edit?usp=drive_link&ouid=110726128853064340139&rtpof=true&sd=true"
googledrive::drive_download(as_id(file_url), path = "test_xlsx.xlsx", overwrite = TRUE) # download file

file <- readxl::read_xlsx("test_xlsx.xlsx") # read file
file |> gt() # print my datatable

```

Write and upload a `.rds` file to Google Drive
```{r}
#| echo: true
#| warning: false
#| eval: true

library(googledrive)
library(readr)
library(dplyr)
library(gt)


## Write and upload a .rds file to Google Drive
## Does only work with drive_auth() - so this does NOT work on GitHub.
#googledrive::drive_auth() 
#
#folder_upload_url <- "https://drive.google.com/drive/folders/1ZJLxPSmOjbPiXn6OQ_JK1CPA40l8fNe4?usp=drive_link"
#folder_upload_id <- "1ZJLxPSmOjbPiXn6OQ_JK1CPA40l8fNe4"
#
#file |> 
#  dplyr::mutate(Remarks = paste("Table in rds written at ", Sys.time())) |>
#  readr::write_rds("test_rds_upload.rds")
#
#googledrive::drive_put("test_rds_upload.rds", path = as_id(folder_upload_id)) # upload file



# Download and read the newly written public shared .rds file from Google Drive
file_upload_url <- "https://drive.google.com/file/d/1voHotEwiiGGi-nc_HrMkw6Cmitw007wG/view?usp=drive_link"
googledrive::drive_download(as_id(file_upload_url), path = "test_rds_upload.rds", overwrite = TRUE) # download file again

file <- readr::read_rds("test_rds_upload.rds") # read file
file |> gt() # print my datatable

```

\
Check authentication and de-authentication
```{r}
#| echo: true
#| warning: false
#| eval: false

library(googledrive)

drive_user()
drive_about()

drive_deauth()   
drive_auth()    
```

\
Download and read a public shared `.rds` file from Google Drive
```{r}
#| echo: true
#| warning: false
#| eval: true

library(googledrive)
library(readr)
library(gt)

googledrive::drive_deauth()     # Without auth

file_url <- "https://drive.google.com/file/d/1tADUi-z8sH6B8ByvZKWXVMcSNVQUP2_H/view?usp=drive_link"
googledrive::drive_download(as_id(file_url), path = "test_rds.rds", overwrite = TRUE) # download file

file <- readr::read_rds("test_rds.rds") # read file
file |> gt() # print my datatable
```

\
Read data from an external API: [The Star Wars API](https://swapi.dev/) - API IS DOWN!
```{r}
#| echo: true
#| warning: false
#| eval: false

library(httr2)
library(tidyr)
library(gt)

resp_json <- 
  httr2::request("https://swapi.dev/api/people/") |>
  httr2::req_perform() |>
  httr2::resp_body_json(simplifyVector = TRUE)

name_people <- 
  resp_json$results$name |>  tidyr::as_tibble()
name_people |> gt()
```


\
Read data from an external API, Weather forecast in NYC, API: [The National Weather Service (NWS)](https://api.weather.gov)
```{r}
#| echo: true
#| warning: false
#| eval: false

# library(httr2)
# library(purrr)
# library(dplyr)
# library(lubridate)
# library(gt)
# 
# NWS_base_url <- 'https://api.weather.gov'
# 
# forecast_url <- request(NWS_base_url) |> 
#   req_url_path_append(
#     'points',
#     '40.730610,-73.935242'
#   ) |> 
#   req_perform() |> 
#   resp_body_json() |> 
#   # dplyr::glimpse() |> 
#   purrr::pluck('properties', 'forecastHourly')
# 
# 
# forecast_response <- request(forecast_url) |> 
#   req_perform()
# 
# extracted_data <- forecast_response |> 
#   resp_body_json() |> 
#   pluck('properties', 'periods') |> 
#   purrr::map_dfr( # iterates over each list and binds rows to a tibble
#     \(x) {
#       tibble(
#         time = x |> pluck('startTime'),
#         temp_F = x |> pluck('temperature'),
#         rain_prob = x |> pluck('probabilityOfPrecipitation', 'value'),
#         forecast = x |> pluck('shortForecast')
#       )
#     }
#   ) |> 
#   dplyr::mutate(
#     time = time |> lubridate::ymd_hms()
#   )
# 
# extracted_data |> gt()
```

\
Read a googlesheet from private Google Drive
```{r}
#| echo: true
#| warning: false
#| eval: false

library(googledrive)
library(googlesheets4)
library(dplyr)
library(gt)


# Google Authentication
googledrive::drive_auth(
  scopes = "https://www.googleapis.com/auth/drive.readonly")
gs4_auth(token = drive_token())

# Get Google Sheet ID
ss <- googledrive::drive_get("hv8_planter_sheet")

# ss can be url???
# Read data from Google Sheet
data <- googlesheets4::read_sheet(ss, sheet = "content")

data |> gt()
```

\

```{r}
#| echo: true
#| warning: false
#| eval: false




```